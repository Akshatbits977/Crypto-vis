{"ast":null,"code":"var _jsxFileName = \"/home/toolsuser/akshat/crypto_new/crab_app/src/react-login-app/src/MetadataTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MetadataTable({\n  searchQuery\n}) {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // Fetch data from the 'merged' collection on your server\n    fetch('https://perfwsw3.aus.stglabs.ibm.com:3011/fetchCollectionData/merged').then(response => response.json()).then(fetchedData => setData(fetchedData));\n  }, []);\n  if (data.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 35\n  }, this);\n  const headers = [\"collectionDate\", ...Object.keys(data[0].metadata)];\n  const filteredData = data.filter(entry => entry.collectionDate.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: header\n        }, header, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: filteredData.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: entry.collectionDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), Object.values(entry.metadata).map((value, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: value\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(MetadataTable, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = MetadataTable;\nexport default MetadataTable;\nvar _c;\n$RefreshReg$(_c, \"MetadataTable\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MetadataTable","searchQuery","_s","data","setData","fetch","then","response","json","fetchedData","length","children","fileName","_jsxFileName","lineNumber","columnNumber","headers","Object","keys","metadata","filteredData","filter","entry","collectionDate","toLowerCase","includes","map","header","index","values","value","idx","_c","$RefreshReg$"],"sources":["/home/toolsuser/akshat/crypto_new/crab_app/src/react-login-app/src/MetadataTable.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction MetadataTable({ searchQuery }) {\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        // Fetch data from the 'merged' collection on your server\n        fetch('https://perfwsw3.aus.stglabs.ibm.com:3011/fetchCollectionData/merged')\n            .then((response) => response.json())\n            .then((fetchedData) => setData(fetchedData));\n    }, []);\n\n    if (data.length === 0) return <p>Loading...</p>;\n\n    const headers = [\"collectionDate\", ...Object.keys(data[0].metadata)];\n\n    const filteredData = data.filter(entry => \n        entry.collectionDate.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n\n    return (\n        <table>\n            <thead>\n                <tr>\n                    {headers.map((header) => (\n                        <th key={header}>{header}</th>\n                    ))}\n                </tr>\n            </thead>\n            <tbody>\n                {filteredData.map((entry, index) => (\n                    <tr key={index}>\n                        <td>{entry.collectionDate}</td>\n                        {Object.values(entry.metadata).map((value, idx) => (\n                            <td key={idx}>{value}</td>\n                        ))}\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n}\n\nexport default MetadataTable;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,aAAaA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACZ;IACAQ,KAAK,CAAC,sEAAsE,CAAC,CACxEC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,WAAW,IAAKL,OAAO,CAACK,WAAW,CAAC,CAAC;EACpD,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIN,IAAI,CAACO,MAAM,KAAK,CAAC,EAAE,oBAAOX,OAAA;IAAAY,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE/C,MAAMC,OAAO,GAAG,CAAC,gBAAgB,EAAE,GAAGC,MAAM,CAACC,IAAI,CAACf,IAAI,CAAC,CAAC,CAAC,CAACgB,QAAQ,CAAC,CAAC;EAEpE,MAAMC,YAAY,GAAGjB,IAAI,CAACkB,MAAM,CAACC,KAAK,IAClCA,KAAK,CAACC,cAAc,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACxB,WAAW,CAACuB,WAAW,CAAC,CAAC,CACzE,CAAC;EAED,oBACIzB,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,eACIZ,OAAA;QAAAY,QAAA,EACKK,OAAO,CAACU,GAAG,CAAEC,MAAM,iBAChB5B,OAAA;UAAAY,QAAA,EAAkBgB;QAAM,GAAfA,MAAM;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAChC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACRhB,OAAA;MAAAY,QAAA,EACKS,YAAY,CAACM,GAAG,CAAC,CAACJ,KAAK,EAAEM,KAAK,kBAC3B7B,OAAA;QAAAY,QAAA,gBACIZ,OAAA;UAAAY,QAAA,EAAKW,KAAK,CAACC;QAAc;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAC9BE,MAAM,CAACY,MAAM,CAACP,KAAK,CAACH,QAAQ,CAAC,CAACO,GAAG,CAAC,CAACI,KAAK,EAAEC,GAAG,kBAC1ChC,OAAA;UAAAY,QAAA,EAAemB;QAAK,GAAXC,GAAG;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAC5B,CAAC;MAAA,GAJGa,KAAK;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEhB;AAACb,EAAA,CAvCQF,aAAa;AAAAgC,EAAA,GAAbhC,aAAa;AAyCtB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}